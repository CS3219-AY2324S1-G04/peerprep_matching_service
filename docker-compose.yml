version: '3'
services:
  #Matching Service
  matching_service_mongo:
    container_name: matching_service_mongo
    image: mongo:latest
    restart: unless-stopped
    environment:
      # This is admin account.
      MONGO_INITDB_ROOT_USERNAME: ${MS_MONGO_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MS_MONGO_ADMIN_PASS}

    networks:
      - peerprep

  matching_service_mongo_init:
    depends_on:
      - matching_service_mongo
    image: ghcr.io/cs3219-ay2324s1-g04/peerprep_matching_service_database_initialiser
    build:
      context: .
      dockerfile: ./dockerfiles/database_initialiser.dockerfile
    environment:
      MS_MONGO_URI: mongodb://${MS_MONGO_ADMIN_USER}:${MS_MONGO_ADMIN_PASS}@matching_service_mongo:{MS_MONGO_PORT}

      # Note: The following account will be created for services to aces via
      # mongodb://MS_MONGO_USER:MS_MONGO_PASS@MS_MONGO_HOST:MONGO_PORT/MONGO_DB
      MS_MONGO_USER: ${MS_MONGO_USER}
      MS_MONGO_PASS: ${MS_MONGO_PASS}

      MS_MONGO_DB: ${MS_MONGO_DB}
      MS_MONGO_COLLECTION: ${MS_MONGO_COLLECTION}

      QUEUE_EXPIRY: ${QUEUE_EXPIRY}

      # This is admin account.
      MONGO_INITDB_ROOT_USERNAME: ${MS_MONGO_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MS_MONGO_ADMIN_PASS}

    networks:
      - peerprep

  matching_service_api:
    depends_on:
      - matching_service_mongo
    image: ghcr.io/cs3219-ay2324s1-g04/peerprep_matching_service_api
    build:
      context: .
      dockerfile: ./dockerfiles/api.dockerfile
    restart: unless-stopped
    environment:
      # API
      NODE_ENV: ${NODE_ENV}
      MS_EXPRESS_PORT: ${MS_EXPRESS_PORT}

      # DB
      MS_MONGO_URI: mongodb://${MS_MONGO_USER}:${MS_MONGO_PASS}@matching_service_mongo:{MS_MONGO_PORT}/${MS_MONGO_DB}

      MS_MONGO_COLLECTION: ${MS_MONGO_COLLECTION}

      QUEUE_EXPIRY: ${QUEUE_EXPIRY}

      # Other Services
      SERVICE_USER_HOST: user_service_api
      SERVICE_USER_PORT: ${SERVICE_USER_PORT}

      SERVICE_QUESTION_HOST: question_service_api
      SERVICE_QUESTION_PORT: ${SERVICE_QUESTION_PORT}

      SERVICE_ROOM_HOST: room_service_api
      SERVICE_ROOM_PORT: ${SERVICE_ROOM_PORT}

    networks:
      - peerprep

    ports:
      - '${MS_EXPRESS_PORT}:${MS_EXPRESS_PORT}'

networks:
  peerprep:
    external: true
    name: peerprep
