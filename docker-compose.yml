version: "3"
services:
  #Matching Service
  peerprep_matching_service_mongo:
    container_name: peerprep_matching_service_mongo
    image: mongo:latest
    restart: always
    environment:
      MONGO_PORT: ${MS_MONGO_PORT}
      MONGO_DB: ${MS_MONGO_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MS_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MS_MONGO_PASS}

    networks:
      - peerprep

  peerprep_matching_service_api:
    container_name: peerprep_matching_service_api
    depends_on:
      - peerprep_matching_service_mongo
    image: peerprep_matching_service_api
    build: ./matchingApi
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      MS_MONGO_HOST: peerprep_matching_service_mongo
      MS_MONGO_PORT: ${MS_MONGO_PORT}
      MS_MONGO_DB: ${MS_MONGO_DB}
      MS_MONGO_USER: ${MS_MONGO_USER}
      MS_MONGO_PASS: ${MS_MONGO_PASS}

      QUEUE_EXPIRY: ${QUEUE_EXPIRY}
      MS_EXPRESS_PORT: ${MS_EXPRESS_PORT}

      SERVICE_USER_HOST: user_service_api
      SERVICE_USER_PORT: ${SERVICE_USER_PORT}

      SERVICE_QUESTION_HOST: question_service_api
      SERVICE_QUESTION_PORT: ${SERVICE_QUESTION_PORT}

      SERVICE_ROOM_HOST: peerprep_room_service_api
      SERVICE_ROOM_PORT: ${SERVICE_ROOM_PORT}

    networks:
      - peerprep
    ports:
      - "${MS_EXPRESS_PORT}:${MS_EXPRESS_PORT}"

  peerprep_matching_service_mongo_init:
    container_name: peerprep_matching_service_mongo_init
    depends_on:
      - peerprep_matching_service_mongo
    image: peerprep_matching_service_mongo_init
    build: ./matchingMongoInit
    environment:
      MS_MONGO_HOST: peerprep_matching_service_mongo
      MS_MONGO_PORT: ${MS_MONGO_PORT}
      MS_MONGO_DB: ${MS_MONGO_DB}
      MS_MONGO_USER: ${MS_MONGO_USER}
      MS_MONGO_PASS: ${MS_MONGO_PASS}
      QUEUE_EXPIRY: ${QUEUE_EXPIRY}
    networks:
      - peerprep

networks:
  peerprep:
    external: true
    name: peerprep

